
Процедура ПроверитьОстаткиПроксиИУведомитьАдминистратора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Прокси.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.Прокси КАК Прокси";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество <= Константы.МинимальныйОстатокПрокси.Получить() Тогда
		
		МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
		
		Для Каждого Пользователь Из МассивПользователей Цикл
			ЕстьРольАдминистратора = Ложь;
			Для Каждого Роль Из Пользователь.Роли Цикл
				Если Роль.Имя = "Администратор" Тогда
					ЕстьРольАдминистратора = Истина;
					Прервать;
				КонецЕсли; 
			КонецЦикла; 
			
			Если ЕстьРольАдминистратора Тогда
				
				УИД = Пользователь.УникальныйИдентификатор;
				
				СпрПользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ",УИД);
				
				Если Не СпрПользователь.Пустая() И ЗначениеЗаполнено(СпрПользователь.ИДЧата) Тогда
					
					ИДБота = Константы.ИДБота.Получить();
					Соединение = ОбменТелеграмСервер.ПодключениеИПроверкаТелеграм(ИДБота);
					Если Соединение = Неопределено Тогда
						Возврат;
					КонецЕсли;
					
					Сообщение = "В базе бюджета заканчиваются прокси. Осталось " + Выборка.Количество + " элементов. Заполните список прокси новыми данными.";
					
					ОбменТелеграмСервер.ОтправитьСообщение(Соединение, ИДБота, СпрПользователь.ИДЧата, Сообщение);
					
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ТекПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ", ТекПользователь.УникальныйИдентификатор);
	Если Пользователь.Пустая() Тогда
		Пользователь = Справочники.Пользователи.НайтиПоНаименованию(ТекПользователь.Имя);
		Если Пользователь.Пустая() Тогда
			Пользователь = Справочники.Пользователи.СоздатьИЗаполнитьДанными(ТекПользователь.Имя, ТекПользователь.УникальныйИдентификатор);
			Сообщить("Был создан новый пользователь");
		Иначе
			Спр = Пользователь.ПолучитьОбъект();
			Спр.ИдентификаторПользователяИБ = ТекПользователь.УникальныйИдентификатор;
			Спр.Записать();
		КонецЕсли; 
	КонецЕсли;
	
	ПараметрыСеанса.ТекущийПользователь = Пользователь;
	
КонецПроцедуры

Процедура ОбновитьIAMЯндекс() Экспорт
	
	СоединениеЯндекс = Новый HTTPСоединение("iam.api.cloud.yandex.net", 443, , , , 20, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type","application/json");
	Запрос = Новый HTTPЗапрос("/iam/v1/tokens",Заголовки);
	СтрокаТела = "{""yandexPassportOauthToken"": """ + Константы.OAUTHТокен.Получить() + """}";
	Запрос.УстановитьТелоИзСтроки(СтрокаТела,КодировкаТекста.UTF8);
	
	ФайлИтога = ПолучитьИмяВременногоФайла();
	СоединениеЯндекс.ОтправитьДляОбработки(Запрос, ФайлИтога);
	
	ТекДок = Новый ТекстовыйДокумент;
	ТекДок.Прочитать(ФайлИтога);
	
	Ответ = ТекДок.ПолучитьТекст();
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Ответ);
	СтруктураОтвета = ПрочитатьJSON(Чтение);
	
	Константы.IAMТокенЯндекс.Установить(СтруктураОтвета.iamToken);
	
КонецПроцедуры

Функция СклоненияСтроки(Строка) Экспорт
	Соединение = Новый HTTPСоединение("ws3.morpher.ru",443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос("/russian/declension?s=" + СтрЗаменить(Строка, " ", "%20") + "&format=json");
	Ответ = Соединение.Получить(Запрос);
	СтрокаОтвет = Ответ.ПолучитьТелоКакСтроку();
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаОтвет);
	СтруктураОтвета = ПрочитатьJSON(Чтение);
	
	ТЗСтрок = Новый ТаблицаЗначений;
	ТЗСтрок.Колонки.Добавить("СклоненноеИмя",Новый ОписаниеТипов("Строка"));
	НовСтрока = ТЗСтрок.Добавить();
	НовСтрока.СклоненноеИмя = Строка;
	Для Каждого Ответ Из СтруктураОтвета Цикл
		Ключ = Ответ.Ключ;
		Если Ключ = "П" Или Ключ = "В" Или Ключ = "Р" Или Ключ = "Д" Или Ключ = "Т" Тогда
			НовСтрока = ТЗСтрок.Добавить();
			НовСтрока.СклоненноеИмя = Ответ.Значение;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ТЗСтрок;
	
КонецФункции
  
Процедура ОбновитьПрокси() Экспорт
	
	Соединение = Новый HTTPСоединение("www.proxy-list.download",443,,,,,Новый ЗащищенноеСоединениеOpenSSL());	
	Запрос = Новый HTTPЗапрос("/api/v1/get?type=http&anon=elite&country=US");
	Ответ = Соединение.Получить(Запрос,);
	Если Ответ.КодСостояния = 200 Тогда
		СтрокаОтвет = Ответ.ПолучитьТелоКакСтроку();
		МассивОтвета = СтрРазделить(СтрокаОтвет, Символы.ПС);
		Для Каждого Прокси Из МассивОтвета Цикл
			
			Данные = СтрРазделить(Прокси, ":");
			Если Не ЗначениеЗаполнено(Данные[0]) Тогда
				Продолжить;
			КонецЕсли; 
			
			Если Данные.Количество() = 1 Тогда
				Порт = "8080";
			Иначе
				Порт = Данные[1];
			КонецЕсли; 
			Сервер = Данные[0];
			
			НовСпр = Справочники.Прокси.СоздатьЭлемент();
			НовСпр.Наименование = Прокси;
			НовСпр.ТипПрокси = Перечисления.ТипыПрокси.http;
			НовСпр.Сервер = Сервер;
			НовСпр.Порт = Порт;
			НовСпр.Записать();
			
		КонецЦикла; 
	КонецЕсли; 
		
КонецПроцедуры
 